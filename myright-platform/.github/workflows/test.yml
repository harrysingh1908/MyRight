name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: myright-platform/package-lock.json

    - name: Install dependencies
      working-directory: ./myright-platform
      run: npm ci

    - name: Run linting
      working-directory: ./myright-platform
      run: npm run lint

    - name: Run type checking
      working-directory: ./myright-platform
      run: npx tsc --noEmit

    - name: Run contract tests
      working-directory: ./myright-platform
      run: npm test tests/contract/ -- --coverage --watchAll=false

    - name: Run unit tests
      working-directory: ./myright-platform
      run: npm test tests/unit/ -- --coverage --watchAll=false

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./myright-platform
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: myright-platform/package-lock.json

    - name: Install dependencies
      working-directory: ./myright-platform
      run: npm ci

    - name: Build application
      working-directory: ./myright-platform
      run: npm run build:production

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: |
          myright-platform/.next/
          myright-platform/package.json
        retention-days: 1

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: myright-platform/package-lock.json

    - name: Install dependencies
      working-directory: ./myright-platform
      run: npm ci

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: myright-platform/

    - name: Run integration tests
      working-directory: ./myright-platform
      run: npm test tests/integration/ -- --watchAll=false --testTimeout=10000

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: myright-platform/package-lock.json

    - name: Install dependencies
      working-directory: ./myright-platform
      run: npm ci

    - name: Install Playwright browsers
      working-directory: ./myright-platform
      run: npx playwright install --with-deps

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: myright-platform/

    - name: Start application
      working-directory: ./myright-platform
      run: |
        npm start &
        npx wait-on http://localhost:3000

    - name: Run Playwright tests
      working-directory: ./myright-platform
      run: npx playwright test

    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: myright-platform/playwright-report/
        retention-days: 30

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: myright-platform/package-lock.json

    - name: Install dependencies
      working-directory: ./myright-platform
      run: npm ci

    - name: Run security audit
      working-directory: ./myright-platform
      run: npm audit --audit-level=high

    - name: Run CodeQL analysis
      uses: github/codeql-action/analyze@v2
      with:
        languages: typescript